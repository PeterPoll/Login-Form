{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/demo-react/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport mongoose from \"mongoose\";\nimport UserSchema from 'user.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  const handlelogin = () => {\n    // props.history.push('/dashboard');\n    mongoose.connect('mongodb+srv://root:root@cluster0.2lr1k.mongodb.net/myFirstDatabase?retryWrites=true&w=majority', {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n    const newUser = new User({\n      email: \"test@module.com\",\n      name: \"testMM\",\n      password: \"testMM\"\n    });\n    newUser.save(err => {\n      if (err) {\n        return console.log(\"Failed newUser.save\");\n      }\n\n      return console.log(\"success newUser.save\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Login \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Password \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: loading ? \"Loading...\" : \"Login\",\n        disabled: loading,\n        onClick: handlelogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"G4T9F0XPbxObYkUBKj9E0I/phAA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/demo-react/src/Login.js"],"names":["React","useState","axios","mongoose","UserSchema","Login","props","username","setUsername","password","setPassword","error","setError","loading","setLoading","handlelogin","connect","useNewUrlParser","useUnifiedTopology","newUser","User","email","name","save","err","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,SAAvB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAGrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAGA,QAAMc,WAAW,GAAG,MAAK;AACrB;AACAZ,IAAAA,QAAQ,CAACa,OAAT,CAAiB,gGAAjB,EAAmH;AAACC,MAAAA,eAAe,EAAE,IAAlB;AAAwBC,MAAAA,kBAAkB,EAAE;AAA5C,KAAnH;AAEA,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS;AACrBC,MAAAA,KAAK,EAAE,iBADc;AAErBC,MAAAA,IAAI,EAAE,QAFe;AAGrBb,MAAAA,QAAQ,EAAE;AAHW,KAAT,CAAhB;AAOAU,IAAAA,OAAO,CAACI,IAAR,CAAaC,GAAG,IAAI;AAChB,UAAIA,GAAJ,EAAS;AACL,eAAOC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAP;AAEH;;AACD,aAAOD,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAP;AAEH,KAPD;AAQH,GAnBD;;AAqBA,sBACI;AAAA,sCACW;AAAA;AAAA;AAAA;AAAA,YADX,oBACiB;AAAA;AAAA;AAAA;AAAA,YADjB,eAEK;AAAA,2CACa;AAAA;AAAA;AAAA;AAAA,cADb,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,KAAK,EAAEnB,QADd;AAEO,QAAA,QAAQ,EAAEoB,CAAC,IAAInB,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAUK;AAAA,2CACa;AAAA;AAAA;AAAA;AAAA,cADb,eAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACA,QAAA,KAAK,EAAEpB,QADP;AAEA,QAAA,QAAQ,EAAEkB,CAAC,IAAIjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAF1B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAOS;AAAA;AAAA;AAAA;AAAA,cAPT,EAQKlB,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,cARd,eASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AACO,QAAA,KAAK,EAAEE,OAAO,GAAE,YAAF,GAAgB,OADrC;AAEO,QAAA,QAAQ,EAAEA,OAFjB;AAGO,QAAA,OAAO,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA3DD;;GAAMV,K;;KAAAA,K;AA6DN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport mongoose from \"mongoose\";\nimport UserSchema from 'user.js';\n\n\nconst Login = (props) => {\n\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(null);\n\n\n    const handlelogin = () =>{\n        // props.history.push('/dashboard');\n        mongoose.connect('mongodb+srv://root:root@cluster0.2lr1k.mongodb.net/myFirstDatabase?retryWrites=true&w=majority', {useNewUrlParser: true, useUnifiedTopology: true});\n        \n        const newUser = new User({\n            email: \"test@module.com\",\n            name: \"testMM\",\n            password: \"testMM\",\n        });\n        \n        \n        newUser.save(err => {\n            if (err) {\n                return console.log(\"Failed newUser.save\");\n        \n            }\n            return console.log(\"success newUser.save\");\n        \n        });\n    }\n\n    return(\n        <div>\n             Login <br/> <br/>\n             <div>\n                 Username <br/>\n                 <input type=\"text\"\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                 >\n                 </input>\n             </div>\n             <div>\n                 Password <br/>\n                 <input type=\"password\"\n                 value={password}\n                 onChange={e => setPassword(e.target.value)}\n                 >\n                 </input>\n                 <br/><br/>\n                 {error && <div className=\"error\">{error}</div>}\n                 <input type=\"button\" \n                        value={loading? \"Loading...\": \"Login\"} \n                        disabled={loading}\n                        onClick={handlelogin}\n                        >\n                 </input>\n             </div>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}